name: CD Pipeline - Deploy

on:
  # push:
  #   branches: [ main ]
  workflow_dispatch:  # Manual trigger only

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests before deploy
      run: npm test -- --coverage --watchAll=false

    - name: Build application
      run: npm run build

    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        vercel-args: '--prod'
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}
        working-directory: ./

  # Alternative deployment options (uncomment as needed)
  
  # deploy-netlify:
  #   name: Deploy to Netlify
  #   runs-on: ubuntu-latest
  #   if: false  # Set to true to enable
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v5
  #   
  #   - name: Setup Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: '20.x'
  #       cache: 'npm'
  #   
  #   - name: Install dependencies
  #     run: npm ci
  #   
  #   - name: Build application
  #     run: npm run build
  #   
  #   - name: Deploy to Netlify
  #     uses: nwtgck/actions-netlify@v3.0
  #     with:
  #       publish-dir: './out'
  #       production-branch: main
  #       github-token: ${{ secrets.GITHUB_TOKEN }}
  #       deploy-message: "Deploy from GitHub Actions"
  #     env:
  #       NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
  #       NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  # deploy-github-pages:
  #   name: Deploy to GitHub Pages
  #   runs-on: ubuntu-latest
  #   if: false  # Set to true to enable
  #   permissions:
  #     contents: read
  #     pages: write
  #     id-token: write
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v5
  #   
  #   - name: Setup Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: '20.x'
  #       cache: 'npm'
  #   
  #   - name: Install dependencies
  #     run: npm ci
  #   
  #   - name: Build for static export
  #     run: |
  #       npm run build
  #   
  #   - name: Setup Pages
  #     uses: actions/configure-pages@v5
  #   
  #   - name: Upload artifact
  #     uses: actions/upload-pages-artifact@v3
  #     with:
  #       path: './out'
  #   
  #   - name: Deploy to GitHub Pages
  #     id: deployment
  #     uses: actions/deploy-pages@v4
